{"version":3,"sources":["components/auth/Visibility.ts","reportWebVitals.ts","features/auth/authSlice.ts","features/microservice/microServiceSlice.ts","features/configurator/configurationSlice.ts","reducers/store.ts","history/index.ts","routes/index.ts","features/microservice/useMicroServiceRouter.ts","config/config.ts","features/auth/JWTAuth.ts","components/auth/Authorized.tsx","components/Navbar.tsx","sites/Home.tsx","sites/Login.tsx","sites/Register.tsx","sites/NotFound.tsx","features/configurator/useStatus.ts","components/ConversionStatus.tsx","components/form/file/FileUploader.tsx","components/PPTUploader.tsx","sites/Dashboard.tsx","features/configurator/useConfigurator.ts","components/auth/AuthorizedRoute.tsx","App.tsx","index.tsx"],"names":["Visibility","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialAuthState","user","undefined","authenticated","authSlice","createSlice","name","initialState","reducers","setAuthentication","state","action","payload","removeAuthentication","actions","microServiceSlice","services","serviceAvailable","addServiceEndpoints","serviceEndpoint","endpoints","setServiceEndpoints","removeServiceEndpoints","setAvailable","available","firstOrUndefined","arr","Array","isArray","length","configurationSlice","configs","setConfiguration","configResponse","id","ID","AfterSlide","afterSlide","MaxImages","maxImages","PptFileId","pptFileId","SvgFileId","svgFileId","Animation","animation","PptFile","pptFile","SvgFile","svgFile","Status","status","convertResponseToConfiguration","setConfigurationStatus","statusChange","configID","newStatus","rootReducer","combineReducers","auth","authReducer","microservice","microServiceReducer","config","configurationReducer","store","configureStore","reducer","useAppDispatch","useDispatch","history","createBrowserHistory","routes","root","home","login","register","dashboard","outofservice","other","useMicroService","useSelector","validStatus","post","route","data","a","endpoint","axios","response","put","getSingleServiceEndpoint","items","Math","floor","random","requestServiceEndpoints","dispatch","get","forEach","item","newMicroService","options","useJWTAuth","microServiceRouter","useMicroServiceRouter","useHistory","convertJWTUserToUser","jwtuserclaims","userId","nameid","email","firstName","family_name","lastName","given_name","useEffect","localStorageToken","localStorage","getItem","jwtDecode","defaults","headers","common","Login","password","remember","Email","Password","token","window","setItem","push","Logout","clear","Register","FirstName","LastName","Authorized","children","visible","useAuthMethod","Everybody","Unauthorized","JWTAuthorized","props","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","appBar","borderBottom","divider","toolbar","flexWrap","toolbarTitle","flexGrow","link","cursor","Navbar","classes","AppBar","position","color","elevation","className","Toolbar","Typography","variant","noWrap","Link","onClick","Button","Copyright","align","href","Date","getFullYear","ul","padding","listStyle","heroContent","cardHeader","type","grey","cardPricing","justifyContent","marginBottom","footer","borderTop","paddingTop","paddingBottom","breakpoints","up","tiers","title","price","description","buttonText","buttonVariant","footers","Home","Fragment","CssBaseline","Container","maxWidth","component","gutterBottom","Grid","container","justify","map","tier","xs","sm","md","Card","CardHeader","subheader","titleTypographyProps","subheaderTypographyProps","CardContent","line","CardActions","fullWidth","Box","mt","useState","credentials","setCredentials","Avatar","noValidate","TextField","required","label","onChange","event","target","value","autoComplete","autoFocus","FormControlLabel","control","Checkbox","checked","passwordAgain","EULA","registration","setRegistration","ValidatorForm","addValidationRule","removeValidationRule","onSubmit","console","log","validators","errorMessages","variadic","NotFound","h1","useStatus","getConfiguration","getConfigurations","updateStatus","key","tableIcons","Add","forwardRef","ref","AddBox","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowDownward","ThirdStateCheck","Remove","ViewColumn","StatusDecoration","alignContent","CircularProgress","size","CheckCircleOutline","ConversionStatus","handle","setInterval","clearInterval","onDownload","rowData","resultFileId","responseType","FileDownload","icons","columns","field","render","cat","c","svgname","pptname","convertToFormat","icon","Save","tooltip","disabled","createStyles","formControl","withoutLabel","textField","fileUpload","pointer","FileUploader","placeholder","formats","multiple","onFileSelect","filePath","setFilePath","fileRef","createRef","onInputClick","current","click","stopPropagation","FormControl","clsx","InputLabel","htmlFor","OutlinedInput","readOnly","endAdornment","InputAdornment","IconButton","accept","files","PPTUploader","onConfiguration","svg","ppt","setConfig","style","Select","labelId","MenuItem","Dashboard","configurator","sendConfiguration","svgFormData","FormData","append","svgResponse","pptFormData","pptResponse","sendStart","useConfigurator","conf","configId","onConfigAsync","AuthorizedRoute","Component","redirect","rest","JWTAuthorizedRoute","App","exact","path","to","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b28d948.chunk.js","sourcesContent":["\r\nexport enum Visibility {\r\n    Everybody,\r\n    Authorized,\r\n    Unauthorized\r\n};\r\n  ","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { User } from './User'\r\n\r\ntype AuthState = {\r\n    user?: User,\r\n    authenticated: boolean\r\n};\r\n\r\nconst initialAuthState: AuthState = {\r\n    user: undefined,\r\n    authenticated: false\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState: initialAuthState,\r\n  reducers: {\r\n\r\n    setAuthentication: (state, action: PayloadAction<User>) => {\r\n        const user = action.payload;\r\n        state.authenticated = true;\r\n        state.user = user;\r\n    },\r\n    removeAuthentication: (state, action: PayloadAction<User>) => {\r\n        if (state.authenticated === true) {\r\n            state.authenticated = false;\r\n            state.user = undefined;\r\n        }\r\n    }\r\n\r\n  }\r\n})\r\n\r\nexport const { setAuthentication, removeAuthentication } = authSlice.actions\r\n\r\nexport default authSlice.reducer\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\n\r\nexport type MicroServiceName = string;\r\nexport type Endpoints = string[];\r\nexport type MicroServiceEndpoints = {\r\n    name: MicroServiceName,\r\n    endpoints: Endpoints\r\n};\r\nexport type MicroServiceEndpointDictionary = { [name: string]: Endpoints };\r\nexport type MicroServiceState = { \r\n    services: MicroServiceEndpointDictionary,\r\n    serviceAvailable: boolean\r\n};\r\n\r\nconst initialMicroServiceState: MicroServiceState = {\r\n    services: {},\r\n    serviceAvailable: false\r\n};\r\n\r\nconst microServiceSlice = createSlice({\r\n  name: 'microservice',\r\n  initialState: initialMicroServiceState,\r\n  reducers: {\r\n    addServiceEndpoints: (state, action: PayloadAction<MicroServiceEndpoints>) => {\r\n        const serviceEndpoint = action.payload;\r\n        if (state.services[serviceEndpoint.name] !== undefined ) {\r\n            const endpoints = state.services[serviceEndpoint.name];\r\n            state.services[serviceEndpoint.name] = [...endpoints, ...serviceEndpoint.endpoints];\r\n        } else {\r\n            state.services[serviceEndpoint.name] = [...serviceEndpoint.endpoints];\r\n        }\r\n    },\r\n    setServiceEndpoints: (state, action: PayloadAction<MicroServiceEndpoints>) => {\r\n        const serviceEndpoint = action.payload;\r\n        state.services[serviceEndpoint.name] = [...serviceEndpoint.endpoints];\r\n    },\r\n    removeServiceEndpoints: (state, action: PayloadAction<MicroServiceEndpoints>) => {\r\n        const serviceEndpoint = action.payload;\r\n        if (serviceEndpoint.name in state.services) {\r\n            delete state.services[serviceEndpoint.name];\r\n        }\r\n    },\r\n    setAvailable: (state, action: PayloadAction<boolean>) => {\r\n        const available = action.payload;\r\n        state.serviceAvailable = available;\r\n    }\r\n\r\n  }\r\n})\r\n\r\nexport const { \r\n    addServiceEndpoints, \r\n    setServiceEndpoints, \r\n    removeServiceEndpoints,\r\n    setAvailable\r\n} = microServiceSlice.actions;\r\n\r\nexport default microServiceSlice.reducer;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\n\r\nexport type FileInformation = {\r\n    _id: string,\r\n    fileId: string,\r\n    userId: string,\r\n    name: string,\r\n};\r\nexport type StatusInformation = {\r\n    _id: string,\r\n    configId: string,\r\n    status: string,\r\n    resultFileId: string\r\n};\r\n\r\nexport interface ConfigurationResponse {\r\n    id: string,\r\n    afterSlide : number, \r\n    maxImages : number, \r\n    pptFileId : string, \r\n    svgFileId : string, \r\n    animation : string, \r\n    pptFile: FileInformation[], \r\n    svgFile: FileInformation[],\r\n    status: StatusInformation[]\r\n};\r\n\r\nexport interface Configuration {\r\n    ID: string,\r\n    AfterSlide : number, \r\n    MaxImages : number, \r\n    PptFileId : string, \r\n    SvgFileId : string, \r\n    Animation : string, \r\n    PptFile?: FileInformation, \r\n    SvgFile?: FileInformation,\r\n    Status?: StatusInformation\r\n};\r\n\r\ntype ConfigurationState = {\r\n    configs:  { [id: string]: Configuration }\r\n};\r\n\r\ntype StatusChange = {\r\n    configID: string,\r\n    newStatus: StatusInformation\r\n};\r\n\r\nconst initialConfigurationState: ConfigurationState = {\r\n    configs: { }\r\n};\r\nconst firstOrUndefined = (arr) => {\r\n    if (!Array.isArray(arr) || arr.length <= 0) return undefined;\r\n    return arr[0];\r\n};\r\n\r\nconst convertResponseToConfiguration = (configResponse: any): Configuration => {\r\n    return {\r\n        ID : configResponse.id, \r\n        AfterSlide : configResponse.afterSlide, \r\n        MaxImages : configResponse.maxImages, \r\n        PptFileId : configResponse.pptFileId, \r\n        SvgFileId : configResponse.svgFileId, \r\n        Animation : configResponse.animation, \r\n        PptFile: firstOrUndefined(configResponse.pptFile), \r\n        SvgFile: firstOrUndefined(configResponse.svgFile),\r\n        Status: firstOrUndefined(configResponse.status)\r\n    };\r\n}\r\n\r\nconst configurationSlice = createSlice({\r\n  name: 'config',\r\n  initialState: initialConfigurationState,\r\n  reducers: {\r\n\r\n    setConfiguration: (state, action: PayloadAction<any>) => {\r\n\r\n        const configResponse = action.payload;\r\n        state.configs[configResponse.id] = convertResponseToConfiguration(configResponse);\r\n    },\r\n\r\n\r\n    setConfigurationStatus: (state, action: PayloadAction<StatusChange>) => {\r\n        const statusChange = action.payload;\r\n        state.configs[statusChange.configID].Status = statusChange.newStatus;\r\n    }\r\n\r\n  }\r\n})\r\n\r\nexport const { setConfiguration, setConfigurationStatus } = configurationSlice.actions\r\n\r\nexport default configurationSlice.reducer\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport { useDispatch } from 'react-redux';\r\n//import todosReducer from 'features/todos/todosSlice'\r\n//import visibilityFilterReducer from 'features/filters/filtersSlice'\r\n\r\nimport authReducer from './../features/auth/authSlice';\r\nimport microServiceReducer from './../features/microservice/microServiceSlice';\r\nimport configurationReducer from '../features/configurator/configurationSlice';\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  microservice: microServiceReducer,\r\n  config: configurationReducer\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer\r\n  });\r\n\r\nexport default store;\r\n\r\nexport type AppDispatch = typeof store.dispatch\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>() ","\r\nimport {createBrowserHistory} from 'history'\r\n\r\nconst history = createBrowserHistory();\r\n \r\nexport default history;","\r\nconst routes = {\r\n    root: \"/\",\r\n    home: \"/home\",\r\n    login: \"/login\",\r\n    register: \"/register\",\r\n    dashboard: \"/dashboard\",\r\n    outofservice: \"/outofservice\",\r\n    other: \"*\"\r\n};\r\n\r\nexport default routes;","import { useSelector } from 'react-redux'\r\n\r\nimport axios from 'axios'\r\n\r\nimport { RootState, AppDispatch } from '../../reducers/store'\r\nimport {ContentProviderAPI} from '../../config/config'\r\n\r\nimport {   \r\n    setAvailable,\r\n    addServiceEndpoints, \r\n    MicroServiceEndpoints,\r\n    MicroServiceName\r\n} from './microServiceSlice'\r\n\r\nexport const useMicroService = () => {\r\n\r\n    const { services, serviceAvailable } = useSelector( (state: RootState) => state.microservice );\r\n\r\n    const requestServiceEndpoints = () => async (dispatch: AppDispatch) => {\r\n\r\n        if (!serviceAvailable) {\r\n\r\n            try {\r\n\r\n                const response = await axios.get(`${ContentProviderAPI}`);\r\n                if (response.status === 200) {\r\n                    const serviceRoutes = response.data as MicroServiceEndpoints[];\r\n                    serviceRoutes.forEach((item) => {\r\n                        const newMicroService: MicroServiceEndpoints = {\r\n                            name: item.name,\r\n                            endpoints: item.endpoints\r\n                        };\r\n                        dispatch(addServiceEndpoints(newMicroService));\r\n        \r\n                    });            \r\n                    dispatch(setAvailable(true));\r\n                } \r\n\r\n            } catch (err) {\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    const getSingleServiceEndpoint = (name: MicroServiceName): (string | null) => {\r\n        const items = services[name];\r\n        if (!serviceAvailable || !items || items.length <= 0) return null;\r\n        return items[Math.floor(Math.random() * items.length)];\r\n    };\r\n\r\n    const validStatus = (status: number): boolean => {\r\n        return status === 400 || status === 401 || status === 200;\r\n    };\r\n\r\n    const post = async (name: MicroServiceName, route: string, data?: any) => {\r\n\r\n        if (!serviceAvailable) return;\r\n        for (let endpoint of services[name]) {\r\n            try {\r\n                const response = await axios.post(`${endpoint}/${route}`, data);\r\n                if (response !== undefined && validStatus(response.status)) {\r\n                    return response;\r\n                }\r\n            } catch (err) {\r\n\r\n            } \r\n        }\r\n\r\n    };\r\n\r\n    const put = async (name: MicroServiceName, route: string, data: any) => {\r\n\r\n        if (!serviceAvailable) return;\r\n        for (let endpoint of services[name]) {\r\n            try {\r\n                const response = await axios.put(`${endpoint}/${route}`, data);\r\n                if (response !== undefined && validStatus(response.status)) {\r\n                    return response;\r\n                }\r\n            } catch (err) {\r\n\r\n            } \r\n        }\r\n\r\n    };\r\n\r\n    const get = async (name: MicroServiceName, route: string, options: any = undefined) => {\r\n\r\n        if (!serviceAvailable) return;\r\n        for (let endpoint of services[name]) {\r\n            try {\r\n                const response = await axios.get(`${endpoint}/${route}`, options);\r\n                if (response !== undefined && validStatus(response.status)) {\r\n                    return response;\r\n                }\r\n            } catch (err) {\r\n\r\n            } \r\n        }\r\n\r\n    };\r\n\r\n    return {\r\n        getSingleServiceEndpoint,\r\n        requestServiceEndpoints,\r\n        serviceAvailable,\r\n        post,\r\n        get,\r\n        put\r\n    };\r\n\r\n};\r\n","//export const ContentProviderAPI = 'https://localhost:27000/api/routes';\r\nexport const ContentProviderAPI = '/api/routes';","//import { useEffect } from \"react\";\r\nimport { useSelector } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport axios from 'axios'\r\nimport jwtDecode from 'jwt-decode'\r\n\r\nimport { useAppDispatch, RootState, AppDispatch } from '../../reducers/store'\r\nimport { setAuthentication, removeAuthentication } from './authSlice'\r\n\r\nimport { useMicroService as useMicroServiceRouter } from '../microservice/useMicroServiceRouter'\r\n\r\nimport routes from './../../routes'\r\nimport { JWTUserClaims, User } from './User';\r\nimport { useEffect } from 'react';\r\n\r\nexport const useJWTAuth = () => {\r\n\r\n    const microServiceRouter = useMicroServiceRouter();\r\n    const dispatch = useAppDispatch();\r\n    const history = useHistory();\r\n    const { user, authenticated } = useSelector( (state: RootState) => state.auth )\r\n\r\n    const convertJWTUserToUser = (jwtuserclaims: JWTUserClaims) => {\r\n      const user: User = {\r\n        userId: jwtuserclaims.nameid, \r\n        email: jwtuserclaims.email, \r\n        firstName: jwtuserclaims.family_name, \r\n        lastName: jwtuserclaims.given_name\r\n      };\r\n      return user;\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n      const localStorageToken = localStorage.getItem(\"JWTToken\")\r\n      if (localStorageToken !== null && localStorageToken !== undefined) {\r\n        const jwtuserclaims = jwtDecode<JWTUserClaims>(localStorageToken);\r\n        const user = convertJWTUserToUser(jwtuserclaims);\r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${localStorageToken}`;\r\n        dispatch(setAuthentication(user));\r\n      }\r\n\r\n    }, [dispatch]);\r\n\r\n\r\n    const Login = (email: string, password: string, remember: boolean) => {\r\n       \r\n      return async (dispatch: AppDispatch) => {\r\n\r\n        const response = await microServiceRouter.post('auth', 'login', {\r\n          Email: email,\r\n          Password: password\r\n        });\r\n        \r\n        if (response === undefined || response.status !== 200) return;\r\n\r\n        const token = response.data.token;\r\n        const jwtuserclaims = jwtDecode<JWTUserClaims>(token);\r\n        const user = convertJWTUserToUser(jwtuserclaims);\r\n\r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n\r\n        if (remember) {\r\n          window.localStorage.setItem(\"JWTToken\", token);\r\n        }\r\n    \r\n        dispatch(setAuthentication(user));\r\n\r\n        history.push(routes.dashboard);\r\n\r\n      };\r\n\r\n    };\r\n\r\n    const Logout = () => {\r\n      window.localStorage.clear();\r\n      delete axios.defaults.headers.common['Authorization'];\r\n      dispatch(removeAuthentication(user));\r\n    };\r\n\r\n    const Register = (email: string, password: string, firstName: string, lastName: string) => {\r\n  \r\n      return async (dispatch: AppDispatch) => {\r\n\r\n        const response = await microServiceRouter.post('auth', 'register',  {\r\n          Email: email,\r\n          FirstName: firstName,\r\n          LastName: lastName,\r\n          Password: password\r\n        });\r\n\r\n\r\n        if (response === undefined || response.status !== 200) return;\r\n\r\n        const token = response.data.token;\r\n        const jwtuserclaims = jwtDecode<JWTUserClaims>(token);\r\n        const user = convertJWTUserToUser(jwtuserclaims);\r\n\r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n  \r\n        dispatch(setAuthentication(user));\r\n\r\n      };\r\n\r\n    };\r\n\r\n    return {\r\n        user,\r\n        authenticated,\r\n        Login,\r\n        Logout,\r\n        Register\r\n    };\r\n\r\n};","import React, { FC } from \"react\";\r\n\r\nimport { useJWTAuth } from './../../features/auth/JWTAuth'\r\nimport {Visibility} from './Visibility'\r\n\r\ntype AuthMethodInterface = any;\r\ntype AuthMethodHook = () => AuthMethodInterface;\r\n\r\ninterface AuthorizedProps {\r\n children?: JSX.Element | JSX.Element[],\r\n  visible: Visibility,\r\n  useAuthMethod: AuthMethodHook\r\n};\r\n\r\nexport const Authorized: FC<AuthorizedProps> = ({ children, visible, useAuthMethod, ...rest }: AuthorizedProps) => {\r\n    const auth = useAuthMethod();\r\n  \r\n      const canShow = (visible === Visibility.Everybody) \r\n              || (visible === Visibility.Authorized && auth.authenticated) \r\n              || (visible === Visibility.Unauthorized && !auth.authenticated);\r\n  \r\n      if (canShow) return (\r\n          <>{children}</>\r\n    );\r\n      return (<></>);\r\n\r\n  }\r\n  \r\n  interface JWTAuthorizedProps {\r\n    children?: JSX.Element | JSX.Element[],\r\n    visible: Visibility\r\n  };\r\n  \r\n  \r\n  export const JWTAuthorized: FC<JWTAuthorizedProps> = (props: JWTAuthorizedProps) => {\r\n  \r\n      return (\r\n        <Authorized {...props} useAuthMethod={useJWTAuth}/>\r\n      );\r\n      \r\n  }","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport AppBar from '@material-ui/core/AppBar';\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport routes from '../routes';\r\nimport { useJWTAuth } from '../features/auth/JWTAuth';\r\nimport { Visibility } from './auth/Visibility';\r\nimport { JWTAuthorized } from './auth/Authorized';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },appBar: {\r\n      borderBottom: `1px solid ${theme.palette.divider}`,\r\n    },\r\n    toolbar: {\r\n      flexWrap: 'wrap',\r\n    },\r\n    toolbarTitle: {\r\n      flexGrow: 1,\r\n    },\r\n    link: {\r\n      margin: theme.spacing(1, 1.5),\r\n      cursor: \"pointer\"\r\n    }\r\n}));\r\n\r\nexport default function Navbar() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const auth = useJWTAuth();\r\n\r\n    const redirectToLogin = () => {\r\n        history.push(routes.login);\r\n    };\r\n\r\n    const redirectToHome = () => {\r\n      history.push(routes.home);\r\n  };\r\n  const redirectToDashboard = () => {\r\n      history.push(routes.dashboard);\r\n  };\r\n\r\n    const logout = () => {\r\n      auth.Logout();\r\n    };\r\n\r\n    return (\r\n        <AppBar position=\"static\" color=\"default\" elevation={0} className={classes.appBar}>\r\n            <Toolbar className={classes.toolbar}>\r\n            <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.toolbarTitle}>\r\n                SVG to PPT\r\n            </Typography>\r\n            <nav>\r\n                <Link variant=\"button\" color=\"textPrimary\" className={classes.link} onClick={redirectToHome}>\r\n                Home\r\n                </Link>\r\n                <JWTAuthorized visible={Visibility.Authorized}>\r\n                  <Link variant=\"button\" color=\"textPrimary\" className={classes.link} onClick={redirectToDashboard}>\r\n                  Files\r\n                  </Link>\r\n                </JWTAuthorized>\r\n            </nav>\r\n            { !auth.authenticated ? \r\n              <Button color=\"primary\" variant=\"outlined\" className={classes.link} onClick={redirectToLogin}>\r\n                  Login\r\n              </Button>\r\n              : <Button color=\"primary\" variant=\"outlined\" className={classes.link} onClick={logout}>\r\n                  Logout\r\n              </Button>\r\n            }\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport StarIcon from '@material-ui/icons/StarBorder';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\nimport Navbar from './../components/Navbar';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"#\">\r\n        SVG2PPT\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  '@global': {\r\n    ul: {\r\n      margin: 0,\r\n      padding: 0,\r\n      listStyle: 'none',\r\n    },\r\n  },\r\n  appBar: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  toolbar: {\r\n    flexWrap: 'wrap',\r\n  },\r\n  toolbarTitle: {\r\n    flexGrow: 1,\r\n  },\r\n  link: {\r\n    margin: theme.spacing(1, 1.5),\r\n  },\r\n  heroContent: {\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n  cardHeader: {\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[700],\r\n  },\r\n  cardPricing: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'baseline',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  footer: {\r\n    borderTop: `1px solid ${theme.palette.divider}`,\r\n    marginTop: theme.spacing(8),\r\n    paddingTop: theme.spacing(3),\r\n    paddingBottom: theme.spacing(3),\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingTop: theme.spacing(6),\r\n      paddingBottom: theme.spacing(6),\r\n    },\r\n  },\r\n}));\r\n\r\ninterface TierData {\r\n    title: string,\r\n    price: string,\r\n    subheader?: string,\r\n    description: string[],\r\n    buttonText: string,\r\n    buttonVariant: \"outlined\" | \"text\" | \"contained\" | undefined\r\n};\r\n\r\nconst tiers: TierData[] = [\r\n  {\r\n    title: 'Free',\r\n    price: '0',\r\n    description: ['We dont charge any fees', 'Customizable conversion', 'Fast'],\r\n    buttonText: 'Sign up for free',\r\n    buttonVariant: 'outlined',\r\n  },\r\n];\r\n\r\nconst footers = [\r\n  {\r\n    title: 'Company',\r\n    description: ['Team', 'History', 'Contact us', 'Locations'],\r\n  },\r\n  {\r\n    title: 'Features',\r\n    description: ['Cool stuff', 'Random feature', 'Team feature', 'Developer stuff', 'Another one'],\r\n  },\r\n  {\r\n    title: 'Resources',\r\n    description: ['Resource', 'Resource name', 'Another resource', 'Final resource'],\r\n  },\r\n  {\r\n    title: 'Legal',\r\n    description: ['Privacy policy', 'Terms of use'],\r\n  },\r\n];\r\n\r\nexport default function Home() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Navbar/>\r\n      {/* Hero unit */}\r\n      <Container maxWidth=\"sm\" component=\"main\" className={classes.heroContent}>\r\n        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n          Welcome to SVG2PPT!\r\n        </Typography>\r\n        <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" component=\"p\">\r\n          Quickly convert your SVG files into your beautiful PowerPoint presentations.\r\n        </Typography>\r\n      </Container>\r\n      {/* End hero unit */}\r\n      <Container maxWidth=\"md\" component=\"main\">\r\n        <Grid container spacing={5} alignItems=\"center\" justify=\"center\">\r\n          {tiers.map((tier) => (\r\n            // Enterprise card is full width at sm breakpoint\r\n            <Grid item key={tier.title} xs={12} sm={tier.title === 'Enterprise' ? 12 : 6} md={4}>\r\n              <Card>\r\n                <CardHeader\r\n                  title={tier.title}\r\n                  subheader={tier.subheader}\r\n                  titleTypographyProps={{ align: 'center' }}\r\n                  subheaderTypographyProps={{ align: 'center' }}\r\n                  action={tier.title === 'Free' ? <StarIcon /> : null}\r\n                  className={classes.cardHeader}\r\n                />\r\n                <CardContent>\r\n                  <div className={classes.cardPricing}>\r\n                    <Typography component=\"h2\" variant=\"h3\" color=\"textPrimary\">\r\n                      ${tier.price}\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" color=\"textSecondary\">\r\n                      /mo\r\n                    </Typography>\r\n                  </div>\r\n                  <ul>\r\n                    {tier.description.map((line) => (\r\n                      <Typography component=\"li\" variant=\"subtitle1\" align=\"center\" key={line}>\r\n                        {line}\r\n                      </Typography>\r\n                    ))}\r\n                  </ul>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button fullWidth variant={tier.buttonVariant} color=\"primary\" href=\"/register\">\r\n                    {tier.buttonText}\r\n                  </Button>\r\n                </CardActions>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n      {/* Footer */}\r\n      <Container maxWidth=\"md\" component=\"footer\" className={classes.footer}>\r\n        <Grid container spacing={4} justify=\"space-evenly\">\r\n          {footers.map((footer) => (\r\n            <Grid item xs={6} sm={3} key={footer.title}>\r\n              <Typography variant=\"h6\" color=\"textPrimary\" gutterBottom>\r\n                {footer.title}\r\n              </Typography>\r\n              <ul>\r\n                {footer.description.map((item) => (\r\n                  <li key={item}>\r\n                    <Link href=\"#\" variant=\"subtitle1\" color=\"textSecondary\">\r\n                      {item}\r\n                    </Link>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n        <Box mt={5}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n      {/* End footer */}\r\n    </React.Fragment>\r\n  );\r\n}","import React, {useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Navbar from './../components/Navbar';\r\nimport { useJWTAuth } from './../features/auth/JWTAuth';\r\nimport { useAppDispatch } from './../reducers/store';\r\n\r\nimport routes from '../routes';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },appBar: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  toolbar: {\r\n    flexWrap: 'wrap',\r\n  },\r\n  toolbarTitle: {\r\n    flexGrow: 1,\r\n  },\r\n  link: {\r\n    margin: theme.spacing(1, 1.5),\r\n  }\r\n}));\r\n\r\ninterface Credentials {\r\n  email: string,\r\n  password: string,\r\n  remember: boolean\r\n};\r\n\r\nexport default function Login() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const dispatch = useAppDispatch();\r\n  const auth = useJWTAuth();\r\n  const [credentials, setCredentials] = useState<Credentials>({\r\n    email: \"\",\r\n    password: \"\",\r\n    remember: false,\r\n  });\r\n\r\n  const onEmailChange = (event) => {\r\n\r\n    setCredentials((state: Credentials) => ({\r\n      ...state,\r\n      email: event.target.value\r\n    }));\r\n\r\n  };\r\n\r\n  const onPasswordChange = (event) => {\r\n\r\n    setCredentials((state: Credentials) => ({\r\n      ...state,\r\n      password: event.target.value\r\n    }));\r\n\r\n  };\r\n\r\n  const onRememberChange = (event) => {\r\n\r\n    setCredentials((state: Credentials) => ({\r\n      ...state,\r\n      remember: event.target.checked\r\n    }));\r\n\r\n  };\r\n\r\n  const tryLogin = () => {\r\n    dispatch(auth.Login(credentials.email, credentials.password, credentials.remember));\r\n  };\r\n\r\n  const redirectToRegister = () => {\r\n    history.push(routes.register);\r\n\r\n  \r\n};\r\n  return (\r\n    <React.Fragment>\r\n      <Navbar/>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              onChange={onEmailChange}\r\n              autoComplete=\"email\"\r\n              value={credentials.email}\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              onChange={onPasswordChange}\r\n              value={credentials.password}\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" checked={credentials.remember} onChange={onRememberChange} />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"button\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={tryLogin}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link variant=\"body2\" \r\n              onClick={redirectToRegister}>\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        <Box mt={8}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Navbar from './../components/Navbar';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator'\r\n\r\nimport routes from './../routes';\r\nimport { useAppDispatch } from '../reducers/store';\r\nimport { useJWTAuth } from '../features/auth/JWTAuth';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\ninterface Registration {\r\n  email: string,\r\n  firstName: string,\r\n  lastName: string,\r\n  password: string,\r\n  passwordAgain: string,\r\n  EULA: boolean\r\n};\r\n\r\nexport default function Register() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const dispatch = useAppDispatch();\r\n  const auth = useJWTAuth();\r\n\r\n  const [registration, setRegistration] = useState<Registration>({\r\n    email: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    password: \"\",\r\n    passwordAgain: \"\",\r\n    EULA: false\r\n  });\r\n\r\n  useEffect(() => {\r\n\r\n    ValidatorForm.addValidationRule('isPasswordLong', (value) => {\r\n        if (value.length < 8) {\r\n            return false;\r\n        }\r\n        return true;\r\n    });\r\n\r\n    ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\r\n      if (value !== registration.password) {\r\n          return false;\r\n      }\r\n      return true;\r\n  });\r\n\r\n  ValidatorForm.addValidationRule('isTruth', value => value);\r\n\r\n    return () => {\r\n      ValidatorForm.removeValidationRule('isPasswordLong');\r\n      ValidatorForm.removeValidationRule('isPasswordMatch');\r\n      ValidatorForm.removeValidationRule('isTruth');\r\n    };\r\n      \r\n  });\r\n\r\n  const redirectToLogin = () => {\r\n      history.push(routes.login);\r\n  };\r\n\r\n  const onEmailChange = (event) => {\r\n\r\n    setRegistration((state: Registration) => ({\r\n      ...state,\r\n      email: event.target.value\r\n    }));\r\n\r\n  };\r\n\r\n  const onFirstNameChange = (event) => {\r\n\r\n    setRegistration((state: Registration) => ({\r\n      ...state,\r\n      firstName: event.target.value\r\n    }));\r\n\r\n  };\r\n\r\n  const onLastNameChange = (event) => {\r\n\r\n    setRegistration((state: Registration) => ({\r\n      ...state,\r\n      lastName: event.target.value\r\n    }));\r\n\r\n  };\r\n\r\n  const onPasswordChange = (event) => {\r\n\r\n    setRegistration((state: Registration) => ({\r\n      ...state,\r\n      password: event.target.value\r\n    }));\r\n\r\n  };\r\n  const onPasswordAgainChange = (event) => {\r\n\r\n    setRegistration((state: Registration) => ({\r\n      ...state,\r\n      passwordAgain: event.target.value\r\n    }));\r\n\r\n  };\r\n\r\n  const onEULAChange = (event) => {\r\n\r\n    setRegistration((state: Registration) => ({\r\n      ...state,\r\n      EULA: event.target.checked\r\n    }));\r\n\r\n  };\r\n\r\n  const tryRegister = () => {\r\n    console.log(\"Trying registration.\");\r\n    dispatch(auth.Register(registration.email, registration.password, registration.firstName, registration.lastName));\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Navbar/>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign up\r\n          </Typography>\r\n          <ValidatorForm className={classes.form} onSubmit={tryRegister}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextValidator\r\n                  autoComplete=\"fname\"\r\n                  name=\"firstName\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  value={registration.firstName}\r\n                  onChange={onFirstNameChange}\r\n                  id=\"firstName\"\r\n                  label=\"First Name\"\r\n                  autoFocus\r\n                  validators={['required']}\r\n                  errorMessages={['This field is required.']}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextValidator\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"lastName\"\r\n                  label=\"Last Name\"\r\n                  name=\"lastName\"\r\n                  value={registration.lastName}\r\n                  onChange={onLastNameChange}\r\n                  autoComplete=\"lname\"\r\n                  validators={['required']}\r\n                  errorMessages={['This field is required.']}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextValidator\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  value={registration.email}\r\n                  onChange={onEmailChange}\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  validators={['required', 'isEmail']}\r\n                  errorMessages={['This field is required.', 'Email is not valid']}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextValidator\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  value={registration.password}\r\n                  onChange={onPasswordChange}\r\n                  autoComplete=\"current-password\"\r\n                  validators={['required', 'isPasswordLong']}\r\n                  errorMessages={['This field is required.', 'Password must be at least 8 characters long.']}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextValidator\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"passwordAgain\"\r\n                  label=\"Password Again\"\r\n                  type=\"password\"\r\n                  value={registration.passwordAgain}\r\n                  onChange={onPasswordAgainChange}\r\n                  id=\"passwordAgain\"\r\n                  autoComplete=\"current-password\"\r\n                  validators={['required', 'isPasswordMatch']}\r\n                  errorMessages={['This field is required.', 'Password mismatch.']}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <FormControlLabel\r\n                  control={<Checkbox name=\"EULA\" checked={registration.EULA}\r\n                  onChange={onEULAChange} color=\"primary\" />}\r\n                  label=\"I accept the EULA.\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Link variadic=\"body2\" onClick={redirectToLogin}>\r\n                  Already have an account? Sign in\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </ValidatorForm>\r\n        </div>\r\n        <Box mt={5}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}","import { Typography } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nexport default function NotFound() { \r\n    return (\r\n        <>\r\n            <Typography h1>404 NOT FOUND!</Typography>\r\n        </>\r\n    );\r\n}","\r\nimport { useSelector } from 'react-redux'\r\nimport { useMicroService } from '../microservice/useMicroServiceRouter'\r\nimport { AppDispatch, RootState } from \"../../reducers/store\";\r\nimport { setConfiguration, setConfigurationStatus } from \"./configurationSlice\";\r\n\r\nexport const useStatus = () => {\r\n\r\n    const services = useMicroService();\r\n    const { configs } = useSelector( (state: RootState) => state.config );\r\n\r\n    const getConfigurations = () => async (dispatch: AppDispatch) => {\r\n\r\n        const response = await services.get('config', 'configs');\r\n        if (response === undefined || response.status !== 200) return;\r\n\r\n        for (let config of response.data.configs) {\r\n            dispatch(setConfiguration(config));\r\n        }\r\n\r\n    };\r\n\r\n    const getConfiguration = async (id: string, dispatch: AppDispatch) => {\r\n\r\n        const response = await services.get('config', `configs/${id}`);\r\n        if (response === undefined || response.status !== 200) return;\r\n\r\n        console.log(response.data);\r\n        \r\n        dispatch(setConfiguration(response.data.config));\r\n\r\n    };\r\n\r\n    const updateStatus = () => async (dispatch: AppDispatch) => {\r\n\r\n        for (let key in configs) {\r\n            const config = configs[key];\r\n\r\n            if (config.Status && config.Status.status === \"Done\") continue;\r\n\r\n            const response = await services.get('status', `${config.ID}`);\r\n            if (response === undefined || response.status !== 200) return;\r\n\r\n            dispatch(setConfigurationStatus({\r\n                configID: config.ID,\r\n                newStatus: response.data\r\n            }));\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n    return {\r\n        configs,\r\n        getConfiguration,\r\n        getConfigurations,\r\n        updateStatus,\r\n    };\r\n\r\n};","import React, { FC, forwardRef, useEffect } from 'react';\r\nimport {\r\n    AddBox,\r\n    Check,\r\n    Clear,\r\n    DeleteOutline,\r\n    ChevronRight,\r\n    Edit,\r\n    SaveAlt,\r\n    FilterList,\r\n    FirstPage,\r\n    LastPage,\r\n    ChevronLeft,\r\n    Search,\r\n    ArrowDownward,\r\n    Remove,\r\n    ViewColumn,\r\n    Save,\r\n    CheckCircleOutline,\r\n  } from \"@material-ui/icons\";\r\nimport MaterialTable, { Icons } from \"material-table\";\r\nimport { useStatus } from '../features/configurator/useStatus';\r\nimport { CircularProgress, Grid, Typography } from '@material-ui/core';\r\nimport { useMicroService } from '../features/microservice/useMicroServiceRouter';\r\nimport FileDownload from 'js-file-download'    \r\nimport { useAppDispatch } from '../reducers/store';\r\n\r\nconst tableIcons: Icons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nexport interface StatusDecorationProps {\r\n    status: string\r\n};\r\n\r\nexport const StatusDecoration: FC<StatusDecorationProps> = ({status}: StatusDecorationProps) => {\r\n\r\n    return (\r\n        <Grid container alignContent=\"center\" spacing={1}>\r\n            <Grid item>\r\n                <Typography>{status}</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n                {status !== \"Done\" \r\n                    ? <CircularProgress size={20}/> \r\n                    : <CheckCircleOutline size={20}/>\r\n                }\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n\r\n}\r\n\r\nexport const ConversionStatus = () => {\r\n\r\n    const status = useStatus();    \r\n    const services = useMicroService();\r\n    const dispatch = useAppDispatch();\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(status.getConfigurations());\r\n\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [dispatch, services.serviceAvailable]);\r\n\r\n    useEffect(() => {\r\n\r\n        const updateTable = () => {\r\n            dispatch(status.updateStatus());\r\n        }\r\n        \r\n        const handle = setInterval(updateTable, 1000);\r\n\r\n        return () => {\r\n            clearInterval(handle);\r\n        };\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [dispatch, services.serviceAvailable, status.updateStatus, status]);\r\n\r\n    const onDownload = (event, rowData) => (async () => {\r\n\r\n        if (rowData.status === 'Done') {\r\n            const response = await services.get('config', `files/${rowData.resultFileId}`, {\r\n                responseType: 'blob'\r\n            });\r\n            if (!response || response.status !== 200) return;\r\n            FileDownload(response.data, 'result.pptx');\r\n        }\r\n\r\n    })();\r\n\r\n    const convertToFormat = (cat) => {\r\n\r\n        const data: any[] = [];\r\n        for (let key in cat) {\r\n            const c = cat[key];\r\n            if (c.PptFile && c.SvgFile) data.push({ \r\n                svgname: c.SvgFile.name, \r\n                pptname: c.PptFile.name, \r\n                status:  c.Status?.status ?? \"Uploading\",\r\n                resultFileId: c.Status?.resultFileId ?? \"\"\r\n            });\r\n        }\r\n        return data;\r\n    };\r\n\r\n    return (\r\n        <MaterialTable\r\n            icons={tableIcons}\r\n            columns={[\r\n                { title: 'SVG Filename', field: 'svgname' },\r\n                { title: 'PPT Filename', field: 'pptname' },\r\n                { title: 'Status', field: 'status', render: (data) => <StatusDecoration status={data.status}/> }\r\n            ]}\r\n            data={convertToFormat(status.configs)} \r\n            actions={[\r\n              rowData => ({\r\n                icon: Save,\r\n                tooltip: 'Download file',\r\n                onClick: onDownload,\r\n                disabled: rowData.status !== \"Done\"\r\n              })\r\n            ]}\r\n            title=\"Converted files\"\r\n        />\r\n    );\r\n};","import React, { createRef, useState } from 'react';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport { FormControl, InputAdornment, InputLabel, OutlinedInput, OutlinedInputProps } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n        cursor: \"pointer\"\r\n    },\r\n    withoutLabel: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    textField: {\r\n    },\r\n    fileUpload: {\r\n        display: \"none\"\r\n    },\r\n    pointer: {\r\n        cursor: \"pointer\",\r\n        \"& input\": {\r\n            cursor: \"pointer\"\r\n        }\r\n    },\r\n  }),\r\n);\r\n\r\nexport interface FileUploaderProps extends OutlinedInputProps {\r\n    id: string,\r\n    formats?: string,\r\n    multiple?: boolean,\r\n    fullWidth?: boolean,\r\n    onFileSelect?: (files) => any\r\n};\r\n\r\nexport const FileUploader = ({id, placeholder, formats, multiple, fullWidth, onFileSelect, ...props}: FileUploaderProps) => {\r\n    const classes = useStyles();\r\n    // htmlFor=\"outlined-adornment-password\"\r\n    // id=\"outlined-adornment-password\"\r\n    const [filePath, setFilePath] = useState<string>(\"\");\r\n\r\n    const fileRef = createRef<HTMLInputElement>();\r\n\r\n    const onInputClick = (event) => {\r\n        fileRef.current?.click();\r\n        event?.stopPropagation();\r\n    };\r\n\r\n    const onFileSelectHandler = (event) => {\r\n        if (event.target.files && event.target.files.length > 0) {\r\n            setFilePath(event.target.files[0].name);\r\n        }\r\n        if (onFileSelect) onFileSelect(event.target.files);\r\n    };\r\n\r\n    return (     \r\n            <FormControl className={clsx(classes.pointer, classes.textField)} fullWidth={fullWidth} variant=\"outlined\">\r\n                <InputLabel className={classes.pointer} >{placeholder}</InputLabel>\r\n                <label htmlFor={id}>\r\n                    <OutlinedInput className={classes.pointer} readOnly fullWidth={fullWidth} {...props} onClick={onInputClick} disabled \r\n                        value={filePath}\r\n                        type={'text'}\r\n                        endAdornment={\r\n                            <InputAdornment position=\"end\">\r\n\r\n                                <IconButton onClick={onInputClick}><PublishIcon /></IconButton>\r\n\r\n                            </InputAdornment>\r\n                        }\r\n                        label={placeholder}\r\n                    />\r\n                </label>\r\n                <input ref={fileRef} className={classes.fileUpload} accept={formats} id={id} multiple={multiple} type=\"file\" onChange={onFileSelectHandler}/>\r\n            </FormControl>\r\n    );\r\n}","import { Button, Card, CardContent, CardHeader, CssBaseline, FormControl, Grid, InputLabel, makeStyles, MenuItem, Select, TextField, Typography } from '@material-ui/core';\r\nimport React, { FC, useState } from 'react'\r\nimport { IConfig } from '../features/configurator/useConfigurator';\r\nimport { FileUploader } from './form/file/FileUploader';\r\n\r\ninterface PPTUploaderProps {\r\n    onConfiguration?: (config: IConfig) => any\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },appBar: {\r\n        borderBottom: `1px solid ${theme.palette.divider}`,\r\n    },\r\n    toolbar: {\r\n        flexWrap: 'wrap',\r\n    },\r\n    toolbarTitle: {\r\n        flexGrow: 1,\r\n    },\r\n    link: {\r\n        margin: theme.spacing(1, 1.5),\r\n    }\r\n}));\r\n\r\ninterface PPTUploaderState extends IConfig {\r\n    svg: any,\r\n    ppt: any,\r\n    afterSlide: number,\r\n    maxImages: number,\r\n    animation: string\r\n};\r\n\r\nexport const PPTUploader: FC<PPTUploaderProps> = ({ onConfiguration, ...rest}: PPTUploaderProps) => {\r\n\r\n    const classes = useStyles();\r\n    const [config, setConfig] = useState<PPTUploaderState>({\r\n        svg: null,\r\n        ppt: null,\r\n        afterSlide: 0,\r\n        maxImages: 0,\r\n        animation: \"\"\r\n    });\r\n\r\n    const setAnimation = (event) => {\r\n        setConfig((state) => ({\r\n            ...state,\r\n            animation: event.target.value\r\n        }));\r\n    };\r\n\r\n    const setAfterSlide = (event) => {\r\n        setConfig((state) => ({\r\n            ...state,\r\n            afterSlide: event.target.value\r\n        }));\r\n    };\r\n    \r\n    const setMaxImages = (event) => {\r\n        setConfig((state) => ({\r\n            ...state,\r\n            maxImages: event.target.value\r\n        }));\r\n    };\r\n\r\n    const setPPTFile = (files) => {\r\n        setConfig((state) => ({\r\n            ...state,\r\n            ppt: files[0]\r\n        }));\r\n    };\r\n\r\n    const setSVGFile = (files) => {\r\n        setConfig((state) => ({\r\n            ...state,\r\n            svg: files[0]\r\n        }));\r\n    };\r\n\r\n    const sendConfig = () => {\r\n        if (!config.svg || !config.ppt || !config.animation) return;\r\n        if (onConfiguration) onConfiguration(config);\r\n    };\r\n\r\n    return (\r\n        <Card style={{marginTop: 10}}>\r\n            <CardHeader title={<Typography variant=\"h6\">SVG conversion</Typography>} />\r\n          <CardContent>\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <form className={classes.form} noValidate>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <FileUploader \r\n                                placeholder=\"SVG file\" \r\n                                fullWidth id=\"svg\" \r\n                                formats=\".svg\"\r\n                                onFileSelect={setSVGFile}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <FileUploader \r\n                                placeholder=\"Powerpoint file\" \r\n                                fullWidth id=\"ppt\" \r\n                                formats=\"application/vnd.ms-powerpoint,application/vnd.openxmlformats-officedocument.presentationml.presentation\"\r\n                                onFileSelect={setPPTFile}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <TextField type=\"number\" fullWidth variant=\"outlined\" label=\"Max image count\" placeholder=\"Max image count\" value={config.maxImages} onChange={setMaxImages}/>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <TextField type=\"number\" fullWidth variant=\"outlined\" label=\"Place after slide N\" placeholder=\"Place after slide N\" value={config.afterSlide} onChange={setAfterSlide}/>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <FormControl variant=\"outlined\" fullWidth>\r\n                                <InputLabel id=\"animation-select-outlined-label\">Animation</InputLabel>\r\n                                <Select labelId=\"animation-select-outlined-label\" label=\"Animation\" fullWidth variant=\"outlined\" value={config.animation} onChange={setAnimation}>\r\n                                    <MenuItem value=\"Simple\">Simple</MenuItem>\r\n                                </Select>\r\n                             </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"button\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={sendConfig}\r\n                    >\r\n                    Start conversion\r\n                    </Button>\r\n                    <Grid container>\r\n                    <Grid item xs>\r\n                    </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n        </CardContent>\r\n    </Card>\r\n    );\r\n\r\n};","import { Container } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { ConversionStatus } from '../components/ConversionStatus';\r\nimport Navbar from '../components/Navbar';\r\nimport { PPTUploader } from '../components/PPTUploader';\r\nimport { IConfig, useConfigurator } from '../features/configurator/useConfigurator';\r\nimport { useStatus } from '../features/configurator/useStatus';\r\nimport { AppDispatch, useAppDispatch } from '../reducers/store';\r\n    \r\nexport default function Dashboard() { \r\n\r\n    const status = useStatus();\r\n    const configurator = useConfigurator();\r\n    const dispatch = useAppDispatch();\r\n\r\n    const onConfigAsync = (conf: IConfig) => async (dispatch: AppDispatch) => {\r\n        const configId = await configurator.sendConfiguration(conf);\r\n        await status.getConfiguration(configId, dispatch);\r\n        await configurator.sendStart(configId);\r\n    };\r\n    const onConfig = (conf: IConfig) => {\r\n        dispatch(onConfigAsync(conf));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Navbar/>\r\n            <Container>\r\n                <PPTUploader onConfiguration={onConfig}/>\r\n                <br/>\r\n                <ConversionStatus />\r\n            </Container>\r\n        </>\r\n    );\r\n}","import  { useMicroService } from './../microservice/useMicroServiceRouter'\r\n\r\nexport interface IConfig {\r\n    afterSlide: number,\r\n    maxImages: number, \r\n    animation: string,\r\n    svg: any,\r\n    ppt: any\r\n};\r\n\r\nexport const useConfigurator = () => {\r\n\r\n    const services = useMicroService();\r\n\r\n    const sendConfiguration = async (config: IConfig) => {\r\n    \r\n        const svgFormData = new FormData();\r\n        svgFormData.append(\"file\", config.svg);\r\n        const svgResponse = await services.post('config', 'files', svgFormData);\r\n        if (!svgResponse || svgResponse.status !== 200) return;\r\n\r\n        const pptFormData = new FormData();\r\n        pptFormData.append(\"file\", config.ppt);\r\n        const pptResponse = await services.post('config', 'files', pptFormData);\r\n        if (!pptResponse || pptResponse.status !== 200) return;\r\n\r\n        const configResponse = await services.put('config', 'configs', {\r\n            \"AfterSlide\": config.afterSlide,\r\n            \"MaxImages\": config.maxImages,\r\n            \"PptFileId\": pptResponse.data.id,\r\n            \"SvgFileId\": svgResponse.data.id,\r\n            \"Animation\": config.animation\r\n        });\r\n        if (!configResponse || configResponse.status !== 200) return;\r\n\r\n        return configResponse.data.id;\r\n\r\n    };\r\n\r\n    const sendStart = async (id: string) => {\r\n\r\n        return await services.post('config', `start/${id}`);\r\n        \r\n    };\r\n\r\n    return {\r\n        sendConfiguration,\r\n        sendStart\r\n    }\r\n\r\n\r\n};","import React, { FC, useEffect } from \"react\";\r\nimport { Route, useHistory } from \"react-router-dom\";\r\n\r\nimport { useJWTAuth } from './../../features/auth/JWTAuth'\r\nimport { Visibility } from './Visibility'\r\n\r\ntype AuthMethodInterface = any;\r\ntype AuthMethodHook = () => AuthMethodInterface;\r\n\r\ninterface AuthorizedRouteProps {\r\n  exact?: boolean,\r\n  path: string,\r\n  component: React.ComponentType<any>,\r\n  visible: Visibility,\r\n  redirect: string,\r\n  useAuthMethod: AuthMethodHook\r\n};\r\n\r\n\r\nexport const AuthorizedRoute: FC<AuthorizedRouteProps> = ({ component: Component, visible, redirect, useAuthMethod, ...rest }: AuthorizedRouteProps) => {\r\n  const auth = useAuthMethod();\r\n  const history = useHistory();\r\n\r\n    useEffect(() => {\r\n\r\n      const canShow: boolean = (visible === Visibility.Everybody) \r\n      || (visible === Visibility.Authorized && auth.authenticated) \r\n      || (visible === Visibility.Unauthorized && !auth.authenticated);\r\n\r\n      if (!canShow) {\r\n        history.push(redirect);\r\n      } \r\n\r\n    }, [auth, history, redirect, visible]);\r\n\r\n    return (\r\n      <Route {...rest} render={(props) => (<Component {...props} />)}/>\r\n    );\r\n}\r\n\r\ninterface JWTAuthorizedRouteProps {\r\n  exact?: boolean,\r\n  path: string,\r\n  component: React.ComponentType<any>,\r\n  visible: Visibility,\r\n  redirect: string,\r\n};\r\n\r\n\r\nexport const JWTAuthorizedRoute: FC<JWTAuthorizedRouteProps> = (props: JWTAuthorizedRouteProps) => {\r\n\r\n    return (\r\n      <AuthorizedRoute {...props} useAuthMethod={useJWTAuth}/>\r\n    );\r\n    \r\n}\r\n","import React, { useEffect } from 'react';\nimport { Router, Switch, Route, Redirect } from \"react-router-dom\";\n\nimport history from './history'\n\nimport Home from './sites/Home'\nimport Login from './sites/Login'\nimport Register from './sites/Register'\nimport NotFound from './sites/NotFound'\nimport Dashboard from './sites/Dashboard'\n\nimport { JWTAuthorizedRoute } from './components/auth/AuthorizedRoute';\nimport { Visibility } from './components/auth/Visibility';\n\nimport routes from './routes'\nimport { useMicroService } from './features/microservice/useMicroServiceRouter';\nimport { useAppDispatch } from './reducers/store';\n\n\nexport default function App() {\n  \n  const dispatch = useAppDispatch();\n  const microservice = useMicroService(); \n\n  useEffect(() => {\n\n    dispatch(microservice.requestServiceEndpoints());\n    \n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch]);\n\n\n  return (\n    <Router history={history}>\n      <Switch>\n        <Redirect exact={true} path={routes.root} to={routes.home}/>\n        <Route path={routes.home} component={Home}/>\n        <JWTAuthorizedRoute visible={Visibility.Unauthorized} redirect={routes.dashboard} path={routes.login} component={Login}/>\n        <JWTAuthorizedRoute visible={Visibility.Unauthorized} redirect={routes.dashboard} path={routes.register} component={Register}/>\n        <JWTAuthorizedRoute visible={Visibility.Authorized} redirect={routes.login} path={routes.dashboard} component={Dashboard}/>\n        <Route path={routes.other} component={NotFound}/>\n      </Switch>\n    </Router>\n  );\n\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider as StoreProvider } from 'react-redux'\nimport store from './reducers/store'\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreProvider store={store}>\n      <App />\n    </StoreProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}